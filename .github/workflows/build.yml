name: Build

on:
  workflow_dispatch:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Extraer versiÃ³n
        id: version
        run: |
          VERSION=$(jq -r '.version' package.json)
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

      - name: Extract sonar.projectKey
        id: project_key
        run: |
          KEY=$(grep -oP '^sonar.projectKey=\K.*' sonar-project.properties)
          echo "KEY=$KEY" >> $GITHUB_OUTPUT

      - uses: sonarsource/sonarqube-scan-action@v4
        with:
          args: >
            -Dsonar.projectVersion=${{ steps.version.outputs.VERSION }}
            -Dsonar.qualitygate.wait=true
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        continue-on-error: true

      - name: Generar reporte
        run: |
          curl -u ${{ secrets.SONAR_USER_TOKEN }}: "${{ secrets.SONAR_HOST_URL }}/api/project_analyses/search?project=${{ steps.project_key.outputs.KEY }}" > report.json
          cat report.json | jq . > analyses.json
          jq '.analyses[] | select(.projectVersion == "${{ steps.version.outputs.VERSION }}")' analyses.json > sonar-report.json

      - name: Upload SonarQube report artifact
        uses: actions/upload-artifact@v3
        with:
          name: sonar-report
          path: sonar-report.json