name: Build

on:
  workflow_dispatch:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      # - name: Extraer versi贸n
      #   id: version
      #   run: |
      #     VERSION=$(jq -r '.version' package.json)
      #     echo "VERSION=$VERSION" >> $GITHUB_ENV
      #     echo "app_version=$VERSION" >> $GITHUB_OUTPUT

      # - name: Setup Java 20
      #   uses: actions/setup-java@v3
      #   with:
      #     java-version: '20'
      #     distribution: 'temurin'

      # - name: Verificar versi贸n de Java
      #   run: java -version

      # - name: Install SonarScanner
      #   run: |
      #     curl -sSLo sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.8.0.2856-linux.zip
      #     unzip sonar-scanner.zip -d $HOME
      #     echo "$HOME/sonar-scanner-4.8.0.2856-linux/bin" >> $GITHUB_PATH
      #     export JAVA_HOME=/opt/hostedtoolcache/Java_Temurin_jdk/20*/x64
      #     export PATH=$JAVA_HOME/bin:$PATH

      # - name: Escanear c贸digo mediante SonarQube
      #   env:
      #       SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      #       SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      #   run: |
      #     sonar-scanner -X -Dsonar.host.url=$SONAR_HOST_URL -Dsonar.login=$SONAR_TOKEN -Dsonar.projectVersion=${{steps.version.outputs.app_version}}

      - name: Extraer versi贸n
        run: |
          VERSION=$(jq -r '.version' package.json)
          if grep -q "^sonar.projectVersion=" sonar-project.properties; then
            sed -i "s/^sonar.projectVersion=.*/sonar.projectVersion=$VERSION/" sonar-project.properties
          else
            echo "sonar.projectVersion=$VERSION" >> sonar-project.properties
          fi
          cat sonar-project.properties

      
      - uses: sonarsource/sonarqube-scan-action@v4
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        continue-on-error: true

      - name: List files
        run: |
          ls -la
          ls -la .scannerwork
          cat .scannerwork/report-task.txt

      - name: Upload SonarQube report artifact
        uses: actions/upload-artifact@v3
        with:
          name: sonar-report
          path: ./report.json